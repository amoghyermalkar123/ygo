package replayui

import (
  "ygo/internal/block"
	"fmt"
)

templ EventItem(event block.Event) {
  <div class="event border p-2 mb-2 rounded">
    <div class="text-sm font-semibold">Type: {string(event.Type)}</div>
    <div class="text-xs text-gray-500">State Vector:</div>
    <pre class="text-xs bg-gray-100 p-1">
      for k, v := range event.StateVector {
        Client {fmt.Sprintf("%d", k)}: Clock {fmt.Sprintf("%d", v)}
      }
    </pre>

    <div class="mt-2">
      for client, blocks := range event.BlocksByClient {
        <div class="mb-1">
          <div class="text-sm font-bold">Client {fmt.Sprintf("%d", client)}</div>
          <ul class="ml-4">
            for _, blk := range blocks {
              <li>
               [ {fmt.Sprintf("%d:%d", blk.ID.Client, blk.ID.Clock)}] "{blk.Content}"
                if blk.Deleted {
                  <span class="text-red-600 text-xs">(deleted)</span>
                }
              </li>
            }
          </ul>
        </div>
      }
    </div>
  </div>
}

templ Empty() {
  <div class="text-sm text-gray-400 italic">Replay reset. Start again.</div>
}

// Renders a single block in the block store.
templ BlockView(blocksByClient map[int64][]block.BlockSnapshot) {
  <div class="block-view flex flex-wrap gap-2 p-2 border rounded mb-4">
    for _, blocks := range blocksByClient {
      for _, blk := range blocks {
        <div class="block px-2 py-1 border rounded text-sm">
          <div class="font-mono text-xs">[{fmt.Sprintf("%d:%d", blk.ID.Client, blk.ID.Clock)}]</div>
          <div>
            "{blk.Content}" 
            if blk.Deleted {
              <span class="text-red-600 text-xs">(deleted)</span>
            }
          </div>
        </div>
      }
    }
  </div>
}

// Renders the state vector.
templ StateVectorView(stateVector map[int64]uint64) {
  <div class="state-vector-view p-2 border rounded mb-4">
    <h2 class="text-sm font-bold mb-1">State Vector</h2>
    <ul class="text-xs font-mono">
      for client, clock := range stateVector {
        <li>Client {fmt.Sprintf("%d:%d", client, clock)}</li>
      }
    </ul>
  </div>
}

templ FullReplayPage(evt block.Event) {
  <div>
    <div class="flex gap-4">
      <div class="w-2/3">
        @BlockView(evt.BlocksByClient)
      </div>
      <div class="w-1/3">
        @StateVectorView(evt.StateVector)
      </div>
    </div>
    <div class="mt-4">
      @EventItem(evt)
    </div>
  </div>
}
